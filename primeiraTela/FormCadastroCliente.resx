<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnImgCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnCadastrarCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        bwAAAG8B8aLcQwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADCSURBVDhPndM/
        CsIwGIfhDg51UtCxg8cQungMwcWjuLt4DxcHB48gOOjoXsG1BxDq+4MYk9gaY+GB718+QmkzngoNrpia
        uM0cBxPvkTeNwvdAygJRnMMWUheIbmKTfxaIDe4YYNihjzPcw/JRSNVaTNFaTOElN6wiNOOe8ZIj9CLX
        2ARUU08z7hkvUbOHBZYB1dSLLhhhi11ANfW+LzDfd4lZoDS96A3GOOESUE29n25QYBIoum7w+p3lgTpC
        M2Y+q55G6dSmgPT0YQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnCancelarCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        dgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADTSURBVDhPlZMx
        EsFAFIbTcg46PQcwo9I7AD2lGYyS1tBTKJ1AwxXUruAK+L+1LxObrMQ3883b9/LvS5okERryLl9ezswq
        M5Wbz9HBmVmUjnxIe2OZZNsyZSGLgr/kTkpfnv+UO1+0ZLeiZHOcpH3e0debNztDsjkO0gJAXXqzM9y7
        LmAnLQDU2IKt6wLW0gJAjS1YuS5gLi0A1NiCmesCJtICQI0tGLsuYCQtANTYgqHrAgbSAk1f+QcwO0Oy
        OXrSAmWSzVGXV/mURZeQZxdZkyJJ3rHmggTR41kJAAAAAElFTkSuQmCC
</value>
  </data>
</root>