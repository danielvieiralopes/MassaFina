<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        dgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADTSURBVDhPlZMx
        EsFAFIbTcg46PQcwo9I7AD2lGYyS1tBTKJ1AwxXUruAK+L+1LxObrMQ3883b9/LvS5okERryLl9ezswq
        M5Wbz9HBmVmUjnxIe2OZZNsyZSGLgr/kTkpfnv+UO1+0ZLeiZHOcpH3e0debNztDsjkO0gJAXXqzM9y7
        LmAnLQDU2IKt6wLW0gJAjS1YuS5gLi0A1NiCmesCJtICQI0tGLsuYCQtANTYgqHrAgbSAk1f+QcwO0Oy
        OXrSAmWSzVGXV/mURZeQZxdZkyJJ3rHmggTR41kJAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnCadastrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        bwAAAG8B8aLcQwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADCSURBVDhPndM/
        CsIwGIfhDg51UtCxg8cQungMwcWjuLt4DxcHB48gOOjoXsG1BxDq+4MYk9gaY+GB718+QmkzngoNrpia
        uM0cBxPvkTeNwvdAygJRnMMWUheIbmKTfxaIDe4YYNihjzPcw/JRSNVaTNFaTOElN6wiNOOe8ZIj9CLX
        2ARUU08z7hkvUbOHBZYB1dSLLhhhi11ANfW+LzDfd4lZoDS96A3GOOESUE29n25QYBIoum7w+p3lgTpC
        M2Y+q55G6dSmgPT0YQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnImgMateria.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAC
        9wAAAvcBLRSNOAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQbSURBVHhe7Zs9
        aBRBGIZ392Iw/msMiggWkkI7LWwEwcpGC8XSyiYQLTSIUURQESSKEAKWWqooSAr/QA3YKAQbEcGkEpUo
        RmISJSJqzmeSC+xN3svt7q2XuVs/eMjd7sw3876zNzu72fXy+XymkRuzRPEXz8t5XtAWeMF13wsGYBLy
        NY7RMIimG2hrR2NDkeaQ+E2+l+u3KtchuRdo3VxkwLT4YGJ24bplwmguaPdy2Rh5m1y/0Q5Bmy5Q/xjt
        XmHCkwXqHaPd44OZ7WWBDDBgDKiHU11SJo0Bakdm+G+A2ugY4/Aafoa2pYarBnznFNXBOboV/MKCpRG2
        MnNfYX9q85aDBuSeIXTjzFJVwXJ+J2Xfza4bH9cMGELdKiXahthG+d9W/dg4ZQAr091KbCn4OVxUeeLg
        kgFvlMi5INaIPLFwxgCzLFUiy0HdiuYCZwxg1u9UAsvhe36vyhcVl46Ay0pgOThrPFf5ouKMAYxknxI4
        F0QDdX/MzhUdhwwIxhC0TAktBbFD5ImFSwaYn8FVJVRBNFLnlZ0jLk4ZYGAtsE8JtkljDWBwzgCYRFw3
        I9ykhBPrmS8eiHqJcNGAGd6anwSnx0McFXv4e4Lvt9g+ZpWriH9iAJ09wkit4+9hvv+y97tE6gYwSj3F
        h2zuoCrnCmkbwHW81xI2wIAp10RZJ0jVAIR22eINRBP7X9rlXSBNA74hdLUywEC0UibVCSwNUjOA0b+g
        hIdhPtiv6s4naRkwjrpmJdoGo7pF/XkjFQMQdV6JVRALzH0/lWc+SMMAcxET6T7eDASruWDYyjMvVGwA
        o39OiSwHV7K7qP/HzldtKjVgFCUrlMAoYN5ZkbOqVGQAAs4oYVEhAi5sHqnc1aISA74iYLkSFgeihVwf
        rNxVI7EBDN5pJSgJxHZyRrxo8h+b9YS5b8DnJ7pMdJIaMEKnY92+KgeGdoh2iuAn10XBqf8VTtcxp1T/
        rioblUQG0NlT4c6nBWLuqPYMiL+k6hDN7B+yy0cliQFfaHSp6kylEMvJP2i1Z8TPecu8cEpN9B/j2AYw
        +idVJ9KCWMuR8JC2zBphmPbaVTkbTOoJ9zMqcQ2gQ94S1YG0IeQ9wVIQC+mfeZBC9bsksQxgNI6rxl2B
        2EI/Yz1JEseAzzSwWDXsEgxSp+h7SSIbQOJjqkHXMA5wtflUaVBENeATiRepBl2E2ECfRy0NkkgGYOpR
        1ZDLsFI8oLTYRDHgI9lizciuwKnxptBTRFkDSJLoet8FiJVoGLE1hSlrAIfSXpW8VmAAzXOFUpvBGFBm
        Cenfxsmi92xqBcJcLPVpXVNMPSwd5XF5Ljb8+9BbQ9yj3+8tHTYD5hDJ9gsTnOKy/coMke2XpgqTRXZf
        mwvNmNl9cTJkQnZfnc0qcmN2yHt/ASlE8u5eQQ6FAAAAAElFTkSuQmCC
</value>
  </data>
</root>